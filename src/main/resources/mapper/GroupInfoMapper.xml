<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hamsterwhat.wechat.mapper.GroupInfoMapper">
    <sql id="groupInfoColumns">
        id, group_id, group_name, group_owner_id, group_notice, status, created_at
    </sql>

    <sql id="baseConditionField">
        <if test="query.id != null">
            AND id = #{query.id}
        </if>
        <if test="query.groupId != null">
            AND group_id = #{query.groupId}
        </if>
        <if test="query.groupName != null">
            AND group_name = #{query.groupName}
        </if>
        <if test="query.groupOwnerId != null">
            AND group_owner_id = #{query.groupOwnerId}
        </if>
        <if test="query.groupNotice != null">
            AND group_notice = #{query.groupNotice}
        </if>
        <if test="query.status != null">
            AND status = #{query.status}
        </if>
        <if test="query.createdAt != null">
            AND created_at = #{query.createdAt}
        </if>
    </sql>

    <sql id="baseCondition">
        <where>
            <include refid="baseConditionField" />
        </where>
    </sql>

    <sql id="queryCondition">
        <where>
            <include refid="baseConditionField" />
            <if test="query.groupNameLike != null and query.groupNameLike !=''">
                AND group_name LIKE CONCAT('%', #{query.groupNameLike},'%')
            </if>
        </where>
    </sql>

    <select id="selectGroupInfoById" resultType="GroupInfo">
        select <include refid="groupInfoColumns" /> from group_info where id = #{id};
    </select>

    <select id="selectGroupInfoByGroupId" resultType="GroupInfo">
        select <include refid="groupInfoColumns" /> from group_info where group_id = #{groupId};
    </select>

    <select id="selectGroupInfoListByGroupOwnerId" resultType="GroupInfo">
        select <include refid="groupInfoColumns" /> from group_info
        where group_owner_id = #{groupOwnerId};
    </select>

    <select id="selectGroupInfoList" resultType="GroupInfo">
        select <include refid="groupInfoColumns" /> from group_info;
    </select>

    <select
            id="selectGroupInfoListByQuery"
            resultType="GroupInfo"
            parameterType="com.hamsterwhat.wechat.entity.query.GroupInfoQuery"
    >
        select <include refid="groupInfoColumns" /> from group_info <include refid="queryCondition" />
        <if test="query.orderBy != null and query.orderDirection != null">
            ORDER BY ${query.orderBy} ${query.orderDirection}
        </if>
        <if test="query.limit != null and query.offset != null">
            LIMIT #{query.limit} OFFSET #{query.offset}
        </if>
    </select>

    <select
            id="selectGroupInfoCountByQuery"
            resultType="java.lang.Integer"
            parameterType="com.hamsterwhat.wechat.entity.query.GroupInfoQuery"
    >
        select count(*) from group_info <include refid="queryCondition" />;
    </select>

    <insert id="insertGroupInfo" parameterType="GroupInfo">
        INSERT INTO group_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="groupId != null">
                group_id,
            </if>
            <if test="groupName != null">
                group_name,
            </if>
            <if test="groupOwnerId != null">
                group_owner_id,
            </if>
            <if test="groupNotice != null">
                group_notice,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="createdAt != null">
                created_at,
            </if>
        </trim>
        <trim prefix="VALUES (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id},
            </if>
            <if test="groupId != null">
                #{groupId},
            </if>
            <if test="groupName != null">
                #{groupName},
            </if>
            <if test="groupOwnerId != null">
                #{groupOwnerId},
            </if>
            <if test="groupNotice != null">
                #{groupNotice},
            </if>
            <if test="status != null">
                #{status},
            </if>
            <if test="createdAt != null">
                #{createdAt},
            </if>
        </trim>
    </insert>

    <update id="updateGroupInfo" parameterType="GroupInfo">
        update group_info
        <set>
            <if test="id != null">
                id = #{id},
            </if>
            <if test="groupId != null">
                group_id = #{groupId},
            </if>
            <if test="groupName != null">
                group_name = #{groupName},
            </if>
            <if test="groupOwnerId != null">
                group_owner_id = #{groupOwnerId},
            </if>
            <if test="groupNotice != null">
                group_notice = #{groupNotice},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="createdAt != null">
                created_at = #{createdAt},
            </if>
        </set>
        where id = #{id};
    </update>

    <delete id="deleteGroupInfoById">
        DELETE FROM group_info WHERE id = #{id};
    </delete>

    <delete id="deleteGroupInfoByGroupId">
        DELETE FROM group_info WHERE group_id = #{groupId};
    </delete>

    <delete id="deleteGroupInfoByGroupOwnerId">
        DELETE FROM group_info WHERE group_owner_id = #{groupOwnerId};
    </delete>

    <delete id="deleteGroupInfoByIds">
        <if test="ids != null and ids.size() != 0">
            DELETE FROM group_info WHERE id IN
            <foreach collection="ids" item="id" separator="," open="(" close=")">
                #{id}
            </foreach>
        </if>
    </delete>

    <delete id="deleteGroupInfoByQuery" parameterType="com.hamsterwhat.wechat.entity.query.GroupInfoQuery">
        DELETE FROM group_info
        <include refid="queryCondition" />
    </delete>
</mapper>